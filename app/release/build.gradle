archivesBaseName = "training-java-app-release"

eclipse {
    project {
        name = 'training-java-app-release'
    }
}

configurations {
    commonJars       { transitive = false }
    springBasicJars  { transitive = false }
    springMoreJars   { transitive = false }
    hibernateJars    { transitive = false }
    jettyJars        { transitive = false }

    serverAppJars    { transitive = false }

    printAppJars    { transitive = false }
}

dependencies {
    compile project(":training-java-object-orented")

    serverAppJars project(':training-java-app-server')
    serverAppJars project(':training-java-design-pattern')
    serverAppJars project(':training-java-data-structure')
    serverAppJars project(':training-java-reflection')
    serverAppJars project(':training-java-object-orented')
    serverAppJars project(':training-java-algorithm')
    serverAppJars project(':training-java-asynchronous')
    serverAppJars project(':training-java-other')
    serverAppJars project(':training-java-spring-framework')
    serverAppJars project(':training-java-settings')
    serverAppJars project(':training-java-object-orented')
}

task releaseServer {
    doLast {
        println "\n\n";
        println "Copy Release template structure ${releaseDir}";
        println "##############################################################################################";

        def serverAppDir = "${releaseDir}/app/server";
        println "\n";
        println "Deploy to  ${serverAppDir}";

        configurations.commonJars.each { File file ->
            copy { from file into "${serverAppDir}/lib" }
        }

        configurations.springBasicJars.each { File file ->
            copy { from file into "${serverAppDir}/lib/spring" }
        }

        configurations.springMoreJars.each { File file ->
            copy { from file into "${serverAppDir}/lib/spring" }
        }

        configurations.hibernateJars.each { File file ->
            copy { from file into "${serverAppDir}/lib/hibernate" }
        }

        configurations.jettyJars.each { File file ->
            copy { from file into "${serverAppDir}/lib/jetty" }
        }

        configurations.serverAppJars.each { File file ->
            copy { from file into "${serverAppDir}/lib" }
        }

        copy {
            from "src/app/server" ;
            into "${serverAppDir}";
        }
    }
}

task release {
    dependsOn 'build'
    dependsOn 'releaseServer'
}
