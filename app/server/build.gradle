archivesBaseName = "training-java-app-server"

configurations {
    // Exclude dependencies because the datasource has not been configured yet
    api {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-data-jpa"
    }
}

configurations {
    commonJars { transitive = false }
    springJars { transitive = true }
    hibernateJars { transitive = false }
    serverAppJars { transitive = false }
}

dependencies {
    api project(':training-java-spring-framework')
    api project(':training-java-io')
    api project(':training-java-xlsx')
    api project(':training-java-settings')

    springJars project(':training-java-spring-framework')
    serverAppJars project(':training-java-app-server')
    serverAppJars project(':training-java-settings')
    serverAppJars project(':training-java-io')
    serverAppJars project(':training-java-xlsx')

    hibernateJars 'com.h2database:h2:1.3.148'
}

task releaseServer {
    doLast {
        println "\n\n";
        println "Copy Release template structure /Users/linuss/Dev/projects/training-java/app/server";
        println "##############################################################################################";

        def serverAppDir = "/Users/linuss/Dev/projects/training-java/app/server/app/server";
        println "\n";
        println "Deploy to  ${serverAppDir}";

        configurations.commonJars.each { File file ->
            copy { from file into "${serverAppDir}/lib" }
        }

        configurations.springJars.each { File file ->
            copy { from file into "${serverAppDir}/lib/spring" }
        }

        configurations.hibernateJars.each { File file ->
            copy { from file into "${serverAppDir}/lib/hibernate" }
        }

        configurations.serverAppJars.each { File file ->
            copy { from file into "${serverAppDir}/lib" }
        }

        copy {
            from "src/app/server";
            into "${serverAppDir}";
        }
    }
}

task release {
    dependsOn 'build'
    dependsOn 'releaseServer'
}